# gradio_interface.py
import joblib
import os
import numpy as np
import gradio as gr

# Load the trained model
model_path = 'malware_detection_model.pkl'
model = joblib.load(model_path)

# Feature extraction function (placeholder)
def extract_features(file_path):
    """
    This is a placeholder function to extract features from a file.
    You need to replace this with your actual feature extraction logic.
    """
    file_size = os.path.getsize(file_path)
    return np.array([file_size])

# Gradio interface function
def predict_malware(file):
    """
    Predict whether the uploaded file is malware or not.
    """
    # Extract features from the uploaded file
    features = extract_features(file.name).reshape(1, -1)
    
    # Predict using the loaded model
    prediction = model.predict(features)
    
    # Return the result
    if prediction == 1:
        return "Malware detected"
    else:
        return "File is clean"

# Create Gradio Interface
gr_interface = gr.Interface(
    fn=predict_malware,
    inputs=gr.File(label="Upload a file for malware detection"),
    outputs=gr.Text(),
    title="Malware Detection Interface",
    description="Upload a file to check if it's malware."
)

# Launch the Gradio interface
if __name__ == "__main__":
    gr_interface.launch()
